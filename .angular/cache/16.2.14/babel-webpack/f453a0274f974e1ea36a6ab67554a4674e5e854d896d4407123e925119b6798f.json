{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://127.0.0.1:5000/'; // Replace with your API endpoint\n  }\n\n  diabetesData(age, pregnancies, glucose, bloodPressure, skinThickness, insulin, bmi, diabetesPedigreeFunction) {\n    const url = `${this.apiUrl}/diabetes/?age=${age}&pregnancies=${pregnancies}&glucose=${glucose}&blood_pressure=${bloodPressure}&skin_thickness=${skinThickness}&insulin=${insulin}&bmi=${bmi}&diabetes_pedigree_function=${diabetesPedigreeFunction}`;\n    return this.http.post(url, {});\n  }\n  kidneyData(age, bloodPressure, specificGravity, albumin, sugar, redBloodCells, pusCell, pusCellClumps, bacteria, bloodGlucoseRandom, bloodUrea, serumCreatinine, sodium, potassium, haemoglobin, packedCellVolume, whiteBloodCellCount, redBloodCellCount, hypertension, diabetesMellitus, coronaryArteryDisease, appetite, pedaEdema, aanemia) {\n    const url = `${this.apiUrl}/kidney/?` + `age=${age}&` + `blood_pressure=${bloodPressure}&` + `specific_gravity=${specificGravity}&` + `albumin=${albumin}&` + `sugar=${sugar}&` + `red_blood_cells=${redBloodCells}&` + `pus_cell=${pusCell}&` + `pus_cell_clumps=${pusCellClumps}&` + `bacteria=${bacteria}&` + `blood_glucose_random=${bloodGlucoseRandom}&` + `blood_urea=${bloodUrea}&` + `serum_creatinine=${serumCreatinine}&` + `sodium=${sodium}&` + `potassium=${potassium}&` + `haemoglobin=${haemoglobin}&` + `packed_cell_volume=${packedCellVolume}&` + `white_blood_cell_count=${whiteBloodCellCount}&` + `red_blood_cell_count=${redBloodCellCount}&` + `hypertension=${hypertension}&` + `diabetes_mellitus=${diabetesMellitus}&` + `coronary_artery_disease=${coronaryArteryDisease}&` + `appetite=${appetite}&` + `peda_edema=${pedaEdema}&` + `aanemia=${aanemia}`;\n    return this.http.post(url, {});\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","diabetesData","age","pregnancies","glucose","bloodPressure","skinThickness","insulin","bmi","diabetesPedigreeFunction","url","post","kidneyData","specificGravity","albumin","sugar","redBloodCells","pusCell","pusCellClumps","bacteria","bloodGlucoseRandom","bloodUrea","serumCreatinine","sodium","potassium","haemoglobin","packedCellVolume","whiteBloodCellCount","redBloodCellCount","hypertension","diabetesMellitus","coronaryArteryDisease","appetite","pedaEdema","aanemia","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\trans\\Downloads\\my-angular-project (extract.me)\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private apiUrl = 'http://127.0.0.1:5000/'; // Replace with your API endpoint\n\n  constructor(private http: HttpClient) { }\n\n\n\n  diabetesData(age: number, pregnancies: number, glucose: number, bloodPressure: number, skinThickness: number, insulin: number, bmi: number, diabetesPedigreeFunction: number): Observable<any> {\n    const url = `${this.apiUrl}/diabetes/?age=${age}&pregnancies=${pregnancies}&glucose=${glucose}&blood_pressure=${bloodPressure}&skin_thickness=${skinThickness}&insulin=${insulin}&bmi=${bmi}&diabetes_pedigree_function=${diabetesPedigreeFunction}`;\n    return this.http.post<any>(url, {});\n  }\n\n  kidneyData(age: number, bloodPressure: number, specificGravity: number, albumin: number, sugar: number, redBloodCells: string, pusCell: string, pusCellClumps: string, bacteria: string, bloodGlucoseRandom: number, bloodUrea: number, serumCreatinine: number, sodium: number, potassium: number, haemoglobin: number, packedCellVolume: number, whiteBloodCellCount: number, redBloodCellCount: number, hypertension: string, diabetesMellitus: string, coronaryArteryDisease: string, appetite: string, pedaEdema: string, aanemia: string){\n    const url = `${this.apiUrl}/kidney/?` +\n    `age=${age}&` +\n    `blood_pressure=${bloodPressure}&` +\n    `specific_gravity=${specificGravity}&` +\n    `albumin=${albumin}&` +\n    `sugar=${sugar}&` +\n    `red_blood_cells=${redBloodCells}&` +\n    `pus_cell=${pusCell}&` +\n    `pus_cell_clumps=${pusCellClumps}&` +\n    `bacteria=${bacteria}&` +\n    `blood_glucose_random=${bloodGlucoseRandom}&` +\n    `blood_urea=${bloodUrea}&` +\n    `serum_creatinine=${serumCreatinine}&` +\n    `sodium=${sodium}&` +\n    `potassium=${potassium}&` +\n    `haemoglobin=${haemoglobin}&` +\n    `packed_cell_volume=${packedCellVolume}&` +\n    `white_blood_cell_count=${whiteBloodCellCount}&` +\n    `red_blood_cell_count=${redBloodCellCount}&` +\n    `hypertension=${hypertension}&` +\n    `diabetes_mellitus=${diabetesMellitus}&` +\n    `coronary_artery_disease=${coronaryArteryDisease}&` +\n    `appetite=${appetite}&` +\n    `peda_edema=${pedaEdema}&` +\n    `aanemia=${aanemia}`;\n    return this.http.post<any>(url, {});\n  }\n}\n\n"],"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,wBAAwB,CAAC,CAAC;EAEH;;EAIxCC,YAAYA,CAACC,GAAW,EAAEC,WAAmB,EAAEC,OAAe,EAAEC,aAAqB,EAAEC,aAAqB,EAAEC,OAAe,EAAEC,GAAW,EAAEC,wBAAgC;IAC1K,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,kBAAkBE,GAAG,gBAAgBC,WAAW,YAAYC,OAAO,mBAAmBC,aAAa,mBAAmBC,aAAa,YAAYC,OAAO,QAAQC,GAAG,+BAA+BC,wBAAwB,EAAE;IACpP,OAAO,IAAI,CAACV,IAAI,CAACY,IAAI,CAAMD,GAAG,EAAE,EAAE,CAAC;EACrC;EAEAE,UAAUA,CAACV,GAAW,EAAEG,aAAqB,EAAEQ,eAAuB,EAAEC,OAAe,EAAEC,KAAa,EAAEC,aAAqB,EAAEC,OAAe,EAAEC,aAAqB,EAAEC,QAAgB,EAAEC,kBAA0B,EAAEC,SAAiB,EAAEC,eAAuB,EAAEC,MAAc,EAAEC,SAAiB,EAAEC,WAAmB,EAAEC,gBAAwB,EAAEC,mBAA2B,EAAEC,iBAAyB,EAAEC,YAAoB,EAAEC,gBAAwB,EAAEC,qBAA6B,EAAEC,QAAgB,EAAEC,SAAiB,EAAEC,OAAe;IAC5gB,MAAMxB,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,WAAW,GACrC,OAAOE,GAAG,GAAG,GACb,kBAAkBG,aAAa,GAAG,GAClC,oBAAoBQ,eAAe,GAAG,GACtC,WAAWC,OAAO,GAAG,GACrB,SAASC,KAAK,GAAG,GACjB,mBAAmBC,aAAa,GAAG,GACnC,YAAYC,OAAO,GAAG,GACtB,mBAAmBC,aAAa,GAAG,GACnC,YAAYC,QAAQ,GAAG,GACvB,wBAAwBC,kBAAkB,GAAG,GAC7C,cAAcC,SAAS,GAAG,GAC1B,oBAAoBC,eAAe,GAAG,GACtC,UAAUC,MAAM,GAAG,GACnB,aAAaC,SAAS,GAAG,GACzB,eAAeC,WAAW,GAAG,GAC7B,sBAAsBC,gBAAgB,GAAG,GACzC,0BAA0BC,mBAAmB,GAAG,GAChD,wBAAwBC,iBAAiB,GAAG,GAC5C,gBAAgBC,YAAY,GAAG,GAC/B,qBAAqBC,gBAAgB,GAAG,GACxC,2BAA2BC,qBAAqB,GAAG,GACnD,YAAYC,QAAQ,GAAG,GACvB,cAAcC,SAAS,GAAG,GAC1B,WAAWC,OAAO,EAAE;IACpB,OAAO,IAAI,CAACnC,IAAI,CAACY,IAAI,CAAMD,GAAG,EAAE,EAAE,CAAC;EACrC;EAAC,QAAAyB,CAAA,G;qBAvCUtC,UAAU,EAAAuC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAV3C,UAAU;IAAA4C,OAAA,EAAV5C,UAAU,CAAA6C,IAAA;IAAAC,UAAA,EAFT;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}