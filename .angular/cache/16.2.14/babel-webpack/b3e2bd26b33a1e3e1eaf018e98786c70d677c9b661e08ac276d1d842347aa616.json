{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"@angular/common\";\nfunction DiabeticComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Age is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DiabeticComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Number of pregnancies is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DiabeticComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Glucose level is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DiabeticComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Blood pressure is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DiabeticComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Skin thickness is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DiabeticComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Insulin level is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DiabeticComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" BMI is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DiabeticComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Diabetes pedigree function is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DiabeticComponent {\n  constructor(formBuilder, apiService) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      age: ['', Validators.required],\n      pregnancies: ['', Validators.required],\n      glucose: ['', Validators.required],\n      blood_pressure: ['', Validators.required],\n      skin_thickness: ['', Validators.required],\n      insulin: ['', Validators.required],\n      bmi: ['', Validators.required],\n      diabetes_pedigree_function: ['', Validators.required]\n    });\n    this.form.valueChanges.subscribe(value => {\n      this.formData = value;\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      this.apiService.diabetesData(this.formData.age, this.formData.pregnancies, this.formData.glucose, this.formData.blood_pressure, this.formData.skin_thickness, this.formData.insulin, this.formData.bmi, this.formData.diabetes_pedigree_function).subscribe(response => {\n        console.log('API call successful:', response);\n      }, error => {\n        console.error('API call error:', error);\n      });\n    }\n  }\n  static #_ = this.ɵfac = function DiabeticComponent_Factory(t) {\n    return new (t || DiabeticComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DiabeticComponent,\n    selectors: [[\"app-diabetic\"]],\n    decls: 43,\n    vars: 10,\n    consts: [[1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"age\"], [\"type\", \"number\", \"formControlName\", \"age\", \"id\", \"age\", \"required\", \"\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"pregnancies\"], [\"type\", \"number\", \"formControlName\", \"pregnancies\", \"id\", \"pregnancies\", \"required\", \"\"], [\"for\", \"glucose\"], [\"type\", \"number\", \"formControlName\", \"glucose\", \"id\", \"glucose\", \"required\", \"\"], [\"for\", \"blood_pressure\"], [\"type\", \"number\", \"formControlName\", \"blood_pressure\", \"id\", \"blood_pressure\", \"required\", \"\"], [\"for\", \"skin_thickness\"], [\"type\", \"number\", \"formControlName\", \"skin_thickness\", \"id\", \"skin_thickness\", \"required\", \"\"], [\"for\", \"insulin\"], [\"type\", \"number\", \"formControlName\", \"insulin\", \"id\", \"insulin\", \"required\", \"\"], [\"for\", \"bmi\"], [\"type\", \"number\", \"formControlName\", \"bmi\", \"id\", \"bmi\", \"required\", \"\"], [\"for\", \"diabetes_pedigree_function\"], [\"type\", \"number\", \"formControlName\", \"diabetes_pedigree_function\", \"id\", \"diabetes_pedigree_function\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error-message\"]],\n    template: function DiabeticComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function DiabeticComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Age\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵtemplate(5, DiabeticComponent_div_5_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Pregnancies\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, DiabeticComponent_div_10_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Glucose\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵtemplate(15, DiabeticComponent_div_15_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Blood Pressure\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵtemplate(20, DiabeticComponent_div_20_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"label\", 11);\n        i0.ɵɵtext(23, \"Skin Thickness\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 12);\n        i0.ɵɵtemplate(25, DiabeticComponent_div_25_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 1)(27, \"label\", 13);\n        i0.ɵɵtext(28, \"Insulin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 14);\n        i0.ɵɵtemplate(30, DiabeticComponent_div_30_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 1)(32, \"label\", 15);\n        i0.ɵɵtext(33, \"BMI\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 16);\n        i0.ɵɵtemplate(35, DiabeticComponent_div_35_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 1)(37, \"label\", 17);\n        i0.ɵɵtext(38, \"Diabetes Pedigree Function\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 18);\n        i0.ɵɵtemplate(40, DiabeticComponent_div_40_Template, 2, 0, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"button\", 19);\n        i0.ɵɵtext(42, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"age\").invalid && ctx.form.get(\"age\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"pregnancies\").invalid && ctx.form.get(\"pregnancies\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"glucose\").invalid && ctx.form.get(\"glucose\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"blood_pressure\").invalid && ctx.form.get(\"blood_pressure\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"skin_thickness\").invalid && ctx.form.get(\"skin_thickness\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"insulin\").invalid && ctx.form.get(\"insulin\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"bmi\").invalid && ctx.form.get(\"bmi\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"diabetes_pedigree_function\").invalid && ctx.form.get(\"diabetes_pedigree_function\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n\\n.form-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  background-color: #f9f9f9;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n  font-weight: bold;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  margin-bottom: 15px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  background-color: #4caf50;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  background-color: #cccccc;\\n  cursor: not-allowed;\\n}\\n\\n\\n\\n.form-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGlhYmV0aWMvZGlhYmV0aWMuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi9teS1hbmd1bGFyLXByb2plY3QlMjAoZXh0cmFjdC5tZSkvc3JjL2FwcC9kaWFiZXRpYy9kaWFiZXRpYy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxrQ0FBQTtBQUNBO0VBQ0ksZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtBQ0NKOztBREVFLDJCQUFBO0FBQ0E7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQ0NKOztBREVFLDJCQUFBO0FBQ0E7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQ0NKOztBREVFLGlDQUFBO0FBQ0E7RUFDRSxXQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUNDSjs7QURFRSw4QkFBQTtBQUNBO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtBQ0NKOztBREVFLG1DQUFBO0FBQ0E7RUFDRSx5QkFBQTtBQ0NKIiwic291cmNlc0NvbnRlbnQiOlsiLyogU3R5bGVzIGZvciB0aGUgZm9ybSBjb250YWluZXIgKi9cclxuLmZvcm0tY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICB9XHJcbiAgXHJcbiAgLyogU3R5bGVzIGZvciBmb3JtIGxhYmVscyAqL1xyXG4gIC5mb3JtLWNvbnRhaW5lciBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIH1cclxuICBcclxuICAvKiBTdHlsZXMgZm9yIGZvcm0gaW5wdXRzICovXHJcbiAgLmZvcm0tY29udGFpbmVyIGlucHV0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFN0eWxlcyBmb3IgdGhlIHN1Ym1pdCBidXR0b24gKi9cclxuICAuZm9ybS1jb250YWluZXIgYnV0dG9uIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIFN0eWxlIGZvciBkaXNhYmxlZCBidXR0b24gKi9cclxuICAuZm9ybS1jb250YWluZXIgYnV0dG9uOmRpc2FibGVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XHJcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG4gIH1cclxuICBcclxuICAvKiBIb3ZlciBlZmZlY3QgZm9yIHN1Ym1pdCBidXR0b24gKi9cclxuICAuZm9ybS1jb250YWluZXIgYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbiAgfVxyXG4gICIsIi8qIFN0eWxlcyBmb3IgdGhlIGZvcm0gY29udGFpbmVyICovXG4uZm9ybS1jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMjBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xufVxuXG4vKiBTdHlsZXMgZm9yIGZvcm0gbGFiZWxzICovXG4uZm9ybS1jb250YWluZXIgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLyogU3R5bGVzIGZvciBmb3JtIGlucHV0cyAqL1xuLmZvcm0tY29udGFpbmVyIGlucHV0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDhweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuXG4vKiBTdHlsZXMgZm9yIHRoZSBzdWJtaXQgYnV0dG9uICovXG4uZm9ybS1jb250YWluZXIgYnV0dG9uIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0Y2FmNTA7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLyogU3R5bGUgZm9yIGRpc2FibGVkIGJ1dHRvbiAqL1xuLmZvcm0tY29udGFpbmVyIGJ1dHRvbjpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG59XG5cbi8qIEhvdmVyIGVmZmVjdCBmb3Igc3VibWl0IGJ1dHRvbiAqL1xuLmZvcm0tY29udGFpbmVyIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","DiabeticComponent","constructor","formBuilder","apiService","ngOnInit","form","group","age","required","pregnancies","glucose","blood_pressure","skin_thickness","insulin","bmi","diabetes_pedigree_function","valueChanges","subscribe","value","formData","onSubmit","valid","diabetesData","response","console","log","error","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiService","_2","selectors","decls","vars","consts","template","DiabeticComponent_Template","rf","ctx","ɵɵlistener","DiabeticComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","DiabeticComponent_div_5_Template","DiabeticComponent_div_10_Template","DiabeticComponent_div_15_Template","DiabeticComponent_div_20_Template","DiabeticComponent_div_25_Template","DiabeticComponent_div_30_Template","DiabeticComponent_div_35_Template","DiabeticComponent_div_40_Template","ɵɵproperty","ɵɵadvance","get","invalid","touched"],"sources":["C:\\Users\\trans\\OneDrive\\Desktop\\Major_project\\my-angular-project (extract.me)\\src\\app\\diabetic\\diabetic.component.ts","C:\\Users\\trans\\OneDrive\\Desktop\\Major_project\\my-angular-project (extract.me)\\src\\app\\diabetic\\diabetic.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../api.service';\n\n@Component({\n  selector: 'app-diabetic',\n  templateUrl: './diabetic.component.html',\n  styleUrls: ['./diabetic.component.scss']\n})\nexport class DiabeticComponent implements OnInit {\n  form!: FormGroup;\n  formData: any;\n\n\n  constructor(private formBuilder: FormBuilder, private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      age: ['', Validators.required],\n      pregnancies: ['', Validators.required],\n      glucose: ['', Validators.required],\n      blood_pressure: ['', Validators.required],\n      skin_thickness: ['', Validators.required],\n      insulin: ['', Validators.required],\n      bmi: ['', Validators.required],\n      diabetes_pedigree_function: ['', Validators.required]\n    });\n\n    this.form.valueChanges.subscribe(value => {\n      this.formData = value;\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n\n      this.apiService.diabetesData(this.formData.age, this.formData.pregnancies, this.formData.glucose, this.formData.blood_pressure,  this.formData.skin_thickness, this.formData.insulin,  this.formData.bmi, this.formData.diabetes_pedigree_function)\n        .subscribe(\n          response => {\n            console.log('API call successful:', response);\n        \n          },\n          error => {\n            console.error('API call error:', error);\n\n          }\n        );\n    }\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" class=\"form-container\">\n  <div class=\"form-group\">\n    <label for=\"age\">Age</label>\n    <input type=\"number\" formControlName=\"age\" id=\"age\" required>\n    <div *ngIf=\"form.get('age').invalid && form.get('age').touched\" class=\"error-message\">\n      Age is required.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"pregnancies\">Pregnancies</label>\n    <input type=\"number\" formControlName=\"pregnancies\" id=\"pregnancies\" required>\n    <div *ngIf=\"form.get('pregnancies').invalid && form.get('pregnancies').touched\" class=\"error-message\">\n      Number of pregnancies is required.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"glucose\">Glucose</label>\n    <input type=\"number\" formControlName=\"glucose\" id=\"glucose\" required>\n    <div *ngIf=\"form.get('glucose').invalid && form.get('glucose').touched\" class=\"error-message\">\n      Glucose level is required.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"blood_pressure\">Blood Pressure</label>\n    <input type=\"number\" formControlName=\"blood_pressure\" id=\"blood_pressure\" required>\n    <div *ngIf=\"form.get('blood_pressure').invalid && form.get('blood_pressure').touched\" class=\"error-message\">\n      Blood pressure is required.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"skin_thickness\">Skin Thickness</label>\n    <input type=\"number\" formControlName=\"skin_thickness\" id=\"skin_thickness\" required>\n    <div *ngIf=\"form.get('skin_thickness').invalid && form.get('skin_thickness').touched\" class=\"error-message\">\n      Skin thickness is required.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"insulin\">Insulin</label>\n    <input type=\"number\" formControlName=\"insulin\" id=\"insulin\" required>\n    <div *ngIf=\"form.get('insulin').invalid && form.get('insulin').touched\" class=\"error-message\">\n      Insulin level is required.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"bmi\">BMI</label>\n    <input type=\"number\" formControlName=\"bmi\" id=\"bmi\" required>\n    <div *ngIf=\"form.get('bmi').invalid && form.get('bmi').touched\" class=\"error-message\">\n      BMI is required.\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"diabetes_pedigree_function\">Diabetes Pedigree Function</label>\n    <input type=\"number\" formControlName=\"diabetes_pedigree_function\" id=\"diabetes_pedigree_function\" required>\n    <div *ngIf=\"form.get('diabetes_pedigree_function').invalid && form.get('diabetes_pedigree_function').touched\" class=\"error-message\">\n      Diabetes pedigree function is required.\n    </div>\n  </div>\n  <button type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}